<Window x:Class="VenturaSQLStudio.Pages.EditParameterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VenturaSQLStudio.Pages"
        xmlns:ventura="clr-namespace:VenturaSQLStudio"
        mc:Ignorable="d" ResizeMode="CanResizeWithGrip" ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        ventura:ExtraWindowStyles.CanMinimize="false" 
        ventura:ExtraWindowStyles.CanMaximize="false"
        MinWidth="250" MinHeight="250"
        
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        d:DataContext="{d:DesignInstance local:EditParameterWindow}" d:DesignWidth="900" d:DesignHeight="610" >

    <Window.Resources>
        <Style TargetType="{x:Type Label}" x:Key="HeaderLabel">
            <Setter Property="Margin" Value="0,10,0,5" />
            <Setter Property="Background" Value="#FF0173C7" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="800" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0" LastChildFill="True" >
            <StackPanel Margin="15,10,15,10" Height="28" Orientation="Horizontal" DockPanel.Dock="Bottom">
                <Button Name="btnOk" Width="60" Padding="5" IsDefault="True" Click="btnOk_Click">Ok</Button>
                <Button Padding="5" Width="60" Margin="10,0,0,0" IsCancel="True">Cancel</Button>
            </StackPanel>
            <StackPanel Margin="20,10">
                <TextBlock><Run FontWeight="Bold">Parameter name</Run> (Start with the '<Run Name="RunPrefix"/>' character)</TextBlock>
                <TextBox Name="tbParamName" GotFocus="tbParamName_GotFocus" Text="{Binding ViewModel.Name}"  Margin="0,2,0,0" Width="340" HorizontalAlignment="Left" />

                <Grid Margin="0,12,0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Selected Framework Type:" />
                    <TextBlock Grid.Column="1" Text="{Binding ViewModel.FullTypenameInfo, Mode=OneWay}" FontWeight="Bold" />
                </Grid>

                <Label Content="Direction" Style="{StaticResource HeaderLabel}" />
                <CheckBox Margin="0,6,0,0" IsChecked="{Binding ViewModel.Input}" >Input</CheckBox>
                <CheckBox Margin="0,8,0,0" IsChecked="{Binding ViewModel.Output}" >Output</CheckBox>

                <Label Content="Properties" Style="{StaticResource HeaderLabel}" />
                <TextBlock Margin="0,3,0,0" TextWrapping="Wrap">
                    These properties <Run FontWeight="Bold">only</Run> need to be set when
                    <Run FontWeight="Bold">direction output</Run> is checked. When checked, 
                    the DbType, length, precision and scale property will be set at run-time.
                    Uncheck all four checkboxes when the parameter is not used for output.
                </TextBlock>

                <Grid Margin="0,6,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="26" />
                    </Grid.RowDefinitions>

                    <CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding ViewModel.SetDbType}" VerticalAlignment="Center" >DbType</CheckBox>
                    <TextBlock Grid.Row="0" Grid.Column="1" Margin="0,0,0,2" HorizontalAlignment="Left" Text="{Binding ViewModel.ShortDbTypeString}" VerticalAlignment="Center" FontWeight="Bold" />

                    <CheckBox Grid.Row="1" Grid.Column="0" IsChecked="{Binding ViewModel.SetLength}" VerticalAlignment="Center" >Length</CheckBox>
                    <TextBox Width="100" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="1" Text="{Binding ViewModel.Length, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />

                    <CheckBox Grid.Row="2" Grid.Column="0" IsChecked="{Binding ViewModel.SetPrecision}" VerticalAlignment="Center" >Precision</CheckBox>
                    <TextBox Width="60" HorizontalAlignment="Left" Grid.Row="2" Grid.Column="1" Text="{Binding ViewModel.Precision, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />

                    <CheckBox Grid.Row="3" Grid.Column="0" IsChecked="{Binding ViewModel.SetScale}" VerticalAlignment="Center" >Scale</CheckBox>
                    <TextBox Width="60" HorizontalAlignment="Left" Grid.Row="3" Grid.Column="1" Text="{Binding ViewModel.Scale, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />

                </Grid>

                <Label Content="Design value" Style="{StaticResource HeaderLabel}" />
                <TextBlock Margin="0,3,0,0" TextWrapping="Wrap">
                    When VenturaSQL Studio executes the SQL script, the design values are used to set the parameter(s).
                    The script is executed to collect resultset information, for code-generation and when you click [Run query].
                    The design value is passed to ADO.NET as a string type.
                </TextBlock>
                <TextBox Width="300" Margin="0,15,0,3" HorizontalAlignment="Left" Text="{Binding ViewModel.DesignValue}" />
                <TextBlock FontSize="10">
                    An empty string or "null" will be set as a DBNull (ADO.NET's null value type).
                </TextBlock>
                <!--<Hyperlink NavigateUri="uri" RequestNavigate="Hyperlink_RequestNavigate">Click here</Hyperlink>-->

            </StackPanel>
        </DockPanel>
        <DockPanel Grid.Column="1" Margin="10" LastChildFill="True" MinWidth="100">
            <TextBlock Name="textblockInfo" Padding="5,4" TextWrapping="Wrap"  DockPanel.Dock="Top" Foreground="Black" Background="#FFFFF19D" />
            <ListView BorderThickness="1" BorderBrush="#FF0173C7" 
             HorizontalContentAlignment="Stretch" Name="lvTasks"
             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="IsSelected" Value="True"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid Margin="10,10" MinHeight="30">
                                <StackPanel>
                                    <TextBlock Text="{Binding Title}" TextWrapping="Wrap" FontWeight="Bold" FontSize="13"/>
                                    <TextBlock Text="{Binding Description}" TextWrapping="Wrap" FontSize="13"/>
                                </StackPanel>
                            </Grid>
                            <Button x:Name="btnSelect" Margin="0,0,20,0" Width="100" Height="30" FontSize="13" FontWeight="Bold"
                                HorizontalAlignment="Right" VerticalAlignment="Center"
                                Visibility="Hidden" Click="btnSelect_Click">Select</Button>
                        </Grid>
                        <DataTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="btnSelect" Value="Visible" />
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListView.ItemTemplate>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Margin="7,10,0,8"  Orientation="Horizontal">
                                    <TextBlock Padding="0,0" FontWeight="Bold" FontSize="14" Foreground="#FF0173C7">
                                       <Run Text="{Binding Name, Mode=OneWay}" /><Run Text=" ("/><Run Text="{Binding ItemCount, Mode=OneWay}"/>)
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
        </DockPanel>

    </Grid>
</Window>
